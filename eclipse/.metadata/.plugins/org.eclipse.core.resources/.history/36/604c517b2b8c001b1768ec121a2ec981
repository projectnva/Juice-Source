package com.github.lunatrius.core.util;

import com.github.lunatrius.core.reference.Reference;
import java.io.File;
import java.io.IOException;

public class FileUtils {

    public static String humanReadableByteCount(long bytes) {
        boolean unit = true;

        if (bytes < 1024L) {
            return bytes + " B";
        } else {
            int exp = (int) (Math.log((double) bytes) / Math.log(1024.0D));
            String pre = "KMGTPE".charAt(exp - 1) + "i";

            return String.format("%3.0f %sB", new Object[] { Double.valueOf((double) bytes / Math.pow(1024.0D, (double) exp)), pre});
        }
    }

    public static boolean contains(File root, String filename) {
        return contains(root, new File(root, filename));
    }

    public static boolean contains(File root, File file) {
        try {
            return file.getCanonicalPath().startsWith(root.getCanonicalPath() + File.separator);
        } catch (IOException ioexception) {
            Reference.logger.error("", ioexception);
            return false;
        }
    }
}
