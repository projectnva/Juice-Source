package com.github.lunatrius.schematica.client.printer.registry;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import net.minecraft.block.state.IBlockState;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.util.BlockPos;
import net.minecraft.util.EnumFacing;
import net.minecraft.world.World;

public class PlacementData {

    private final IValidPlayerFacing validPlayerFacing;
    private final IValidBlockFacing validBlockFacing;
    private IOffset offsetX;
    private IOffset offsetY;
    private IOffset offsetZ;
    private IExtraClick extraClick;

    public PlacementData() {
        this((IValidPlayerFacing) null, (IValidBlockFacing) null);
    }

    public PlacementData(IValidPlayerFacing validPlayerFacing) {
        this(validPlayerFacing, (IValidBlockFacing) null);
    }

    public PlacementData(IValidBlockFacing validBlockFacing) {
        this((IValidPlayerFacing) null, validBlockFacing);
    }

    public PlacementData(IValidPlayerFacing validPlayerFacing, IValidBlockFacing validBlockFacing) {
        this.validPlayerFacing = validPlayerFacing;
        this.validBlockFacing = validBlockFacing;
        this.offsetX = null;
        this.offsetY = null;
        this.offsetZ = null;
    }

    public PlacementData setOffsetX(IOffset offset) {
        this.offsetX = offset;
        return this;
    }

    public PlacementData setOffsetY(IOffset offset) {
        this.offsetY = offset;
        return this;
    }

    public PlacementData setOffsetZ(IOffset offset) {
        this.offsetZ = offset;
        return this;
    }

    public PlacementData setExtraClick(IExtraClick extraClick) {
        this.extraClick = extraClick;
        return this;
    }

    public float getOffsetX(IBlockState blockState) {
        return this.offsetX != null ? this.offsetX.getOffset(blockState) : 0.5F;
    }

    public float getOffsetY(IBlockState blockState) {
        return this.offsetY != null ? this.offsetY.getOffset(blockState) : 0.5F;
    }

    public float getOffsetZ(IBlockState blockState) {
        return this.offsetZ != null ? this.offsetZ.getOffset(blockState) : 0.5F;
    }

    public int getExtraClicks(IBlockState blockState) {
        return this.extraClick != null ? this.extraClick.getExtraClicks(blockState) : 0;
    }

    public boolean isValidPlayerFacing(IBlockState blockState, EntityPlayer player, BlockPos pos, World world) {
        return this.validPlayerFacing == null || this.validPlayerFacing.isValid(blockState, player, pos, world);
    }

    public List getValidBlockFacings(List solidSides, IBlockState blockState) {
        Object list = this.validBlockFacing != null ? this.validBlockFacing.getValidBlockFacings(solidSides, blockState) : new ArrayList(solidSides);
        Iterator iterator = ((List) list).iterator();

        while (iterator.hasNext()) {
            EnumFacing facing = (EnumFacing) iterator.next();

            if (this.offsetY != null) {
                float offset = this.offsetY.getOffset(blockState);

                if ((double) offset < 0.5D && facing == EnumFacing.UP) {
                    iterator.remove();
                } else if ((double) offset > 0.5D && facing == EnumFacing.DOWN) {
                    iterator.remove();
                }
            }
        }

        return (List) list;
    }
}
