package clientname.mods;

import java.io.File;

import clientname.FileManager;
import clientname.gui.hud.IRenderer;
import clientname.gui.hud.ScreenPosition;
import clientname.mods.module.Category;
import net.minecraft.client.Minecraft;

public class ModDraggable extends Mod implements IRenderer {

	protected ScreenPosition pos;
	
	private String name;
	private int key;
	private Category category;
	private boolean enabled;
	
	protected Minecraft mc = Minecraft.getMinecraft();
	
	public String getName() {
		return name;
	}
	
	public boolean isEnabled() {
		return enabled;
	}

	public void setEnabled(boolean enabled) {
		this.enabled = enabled;
	}

	public void onUpdate() {}
	public void onEnable() {}
	public void onDisable() {}
	
	public void toggle() {
		enabled = !enabled;
		if(enabled) {
			onEnable();
		} 
		else
		{
			onDisable();
		}
	}

	public void setName(String name) {
		this.name = name;
	}

	public int getKey() {
		return key;
	}

	public void setKey(int key) {
		this.key = key;
	}

	public Category getCategory() {
		return category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}
	
	public ModDraggable() {
		pos = loadPositionFromFile();
	}
	
	public ModDraggable(String name, int key, Category cat) {
		this.name = name;
		this.key = key;
		this.category = cat;
		enabled = false;
	}
	
	@Override
	public ScreenPosition load() {
		return pos;
	}
	
	@Override
	public void save(ScreenPosition pos) {
		this.pos = pos;
		savePositionToFile();
	}
	
	private File getFolder() {
		File folder = new File(FileManager.getModsDirectory(), this.getClass().getSimpleName());
		folder.mkdirs();
		return folder;
	}

	private void savePositionToFile() {
		FileManager.writeJsonToFile(new File(getFolder(), "pos.json"), pos);
	}
	
	private ScreenPosition loadPositionFromFile() {
		ScreenPosition loaded = FileManager.readFromJson(new File(getFolder(), "pos.json"), ScreenPosition.class);
		
		if(loaded == null) {
			loaded = ScreenPosition.fromRelativePosition(0.5, 0.5);
			this.pos = loaded;
			savePositionToFile();
		}
		
		return loaded;
	}
	
	public final int getLineOffset(ScreenPosition pos, int lineNum) {
		return pos.getAbsoluteY() + getLineOffset(lineNum);
	}
	
	private int getLineOffset(int lineNum) {
		return (font.FONT_HEIGHT + 3) * lineNum;
	}

	@Override
	public int getWidth() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int getHeight() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void render(ScreenPosition pos) {
		// TODO Auto-generated method stub
		
	}
	
}