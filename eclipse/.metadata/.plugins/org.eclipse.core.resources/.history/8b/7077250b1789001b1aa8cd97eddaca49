package net.minecraft.client.gui;

import java.awt.Color;
import java.io.IOException;

import tech.lowspeccorgi.Quark.Elements.Element;
import tech.lowspeccorgi.Quark.Elements.ElementManager;
import tech.lowspeccorgi.Quark.Elements.impl.CardElement;
import tech.lowspeccorgi.Quark.Elements.impl.PanelElement;
import tech.lowspeccorgi.Quark.Style.Anchor;
import tech.lowspeccorgi.Quark.Style.CornerType;
import tech.lowspeccorgi.Quark.Style.RectStyle;
import tech.lowspeccorgi.Quark.Style.RectType;
import tech.lowspeccorgi.Quark.Style.TextStyle;
import tech.lowspeccorgi.Quark.primitives.MathHelper;

public class GuiCapeMenu extends GuiScreen{
	ElementManager em = new ElementManager();

    public GuiCapeMenu() {

    }

    @Override
    public void initGui() {
        em.clear();

        Element backPanel = new PanelElement("Back Panel",
                this.width / 3,
                this.height / 3,
                MathHelper.getScaled(1000, this.height),
                MathHelper.getScaled(700, this.height),
                new RectStyle(RectType.OutlineAndFill, 2, CornerType.Square, new Color(20, 20, 20)));

        Element gridPanel = new PanelElement("Grid Panel",
                backPanel.getX() + 20,
                backPanel.getY() + 20,
                backPanel.getWidth() - 20,
                backPanel.getHeight() - 20,
                new RectStyle(RectType.OutlineAndFill, 5, CornerType.Rounded, new Color(70, 70, 70), new Color(100, 100, 100)));

        Element card = new CardElement("Card",
                backPanel.getWidth() / 2,
                backPanel.getY(),
                100,
                50,
                new TextStyle(true, "Client"), new TextStyle(true, "Test"),
                new RectStyle(RectType.Outline, 5, CornerType.Square, new Color(100, 100, 100)),
                5, Anchor.Center);
        
        em.addElements(backPanel, gridPanel, card);
        em.onUpdate();
    }

    @Override
    public void drawScreen(int mouseX, int mouseY, float partialTicks) {

    }

    @Override
    protected void keyTyped(char typedChar, int keyCode) throws IOException {
        super.keyTyped(typedChar, keyCode);
    }

    @Override
    protected void mouseClicked(int mouseX, int mouseY, int mouseButton) throws IOException {
        super.mouseClicked(mouseX, mouseY, mouseButton);
    }
}

